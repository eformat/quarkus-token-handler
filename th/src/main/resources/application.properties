# https://quarkus.io/guides/http-reference
quarkus.http.port=7080
# http2 support over ssl port
quarkus.ssl.native=true
quarkus.http.http2=true
quarkus.http.ssl-port=7443
quarkus.http.ssl.certificate.key-store-file=example.server.p12
quarkus.http.ssl.certificate.key-store-file-type=PKCS12
# use export QUARKUS_HTTP_SSL_CERTIFICATE_KEY_STORE_PASSWORD=
quarkus.http.ssl.certificate.key-store-password=password
# cors
quarkus.http.cors=true
quarkus.http.cors.origins=https://www.example.com
quarkus.http.cors.methods=GET,POST
quarkus.http.cors.headers=accept, authorization, content-type, x-requested-with
quarkus.http.cors.exposed-headers=Content-Disposition
quarkus.http.cors.access-control-max-age=24H
quarkus.http.cors.access-control-allow-credentials=true
# https://content-security-policy.com
quarkus.http.header."Content-Security-Policy".value="default-src 'self';"
quarkus.http.header."X-Content-Type-Options".value=nosniff
# keycloak
keycloak.url=https://localhost:8443
realm=${REALM:bff}
clientId: ${CLIENT_ID:bff_client}
# jwt response verification
mp.jwt.verify.publickey.location=${keycloak.url}/auth/realms/${realm}/protocol/openid-connect/certs
mp.jwt.verify.issuer=${keycloak.url}/auth/realms/${realm}
mp.jwt.verify.audiences=${clientId}
# https://smallrye.io/docs/smallrye-jwt/configuration.html
# no iat expected in jwt, set default sub
smallrye.jwt.time-to-live=-1
smallrye.jwt.claims.sub=foo

# tokenhandler settings
trustedWebOrigins: ${TRUSTED_WEB_ORIGINS:https://www.example.com}
redirectUri: ${REDIRECT_URI:https://www.example.com/}
cookieNamePrefix: ${COOKIE_NAME_PREFIX:example}
cookieExpiresSec: ${COOKIE_EXPIRES_SEC:60}
authServer: ${keycloak.url}
clientSecret: ${CLIENT_SECRET:1cd70bdf-db5b-4346-83da-babe16dae1d8}
encKey: ${COOKIE_ENCRYPTION_KEY:<32 char>}
salt: ${COOKIE_ENCRYPTION_SALT:<32 char>}
ivKey: ${COOKIE_ENCYPTION_IV:<16 char>}

